@import 'variables';
@import 'mixins';
@import 'shadows';

.btn,
.input-group-btn .btn {
  border: none;
  border-radius: 5px;
  position: relative;
  padding: 12px 30px;
  margin: 10px 1px;
  color:#fff;

  font-size: $mdb-btn-font-size-base;
  font-weight: 600;
  text-transform: capitalize;
  letter-spacing: 0;

  will-change: box-shadow, transform;
  transition: box-shadow 0.2s $mdb-animation-curve-fast-out-linear-in,
  background-color 0.2s $mdb-animation-curve-default,
  color 0.2s $mdb-animation-curve-default;

  &::-moz-focus-inner {
    border: 0;
  }
  &.btn-flat{
    border: 0;
    background-color: transparent;
    color:inherit;
    &:hover,
    &:focus {
      background-color: transparent !important;
      color:inherit !important;
      border:1px solid darken(#314fa2,10%);
    }
  }

  &.btn-rect{
    border: 2px solid $ch-green;
    color: $ch-green;
    background: transparent;
    &:hover{
      border-color: $ch-deep-green;
    }
  }

  &.btn-block{
    width:100%;
  }

  &.btn-social
  {
    margin: 0px 0px 20px;
  }

  &.btn-facebook{
    background-color: #314fa2;
    &:hover,
    &:focus {
      background-color: darken(#314fa2,10%) !important;
      color:#fff;
    }
  }

  &.btn-google{
    background-color: #4587ee;
    &:hover,
    &:focus {
      background-color: darken(#4587ee,10%) !important;
      color:#fff;
    }
  }

  border-radius: 2px;
  background-color: $ch-green;

  &:not(.btn-raised) {
    /*@include variations(unquote(".btn"), unquote(""), color, $mdb-text-color-primary);*/
    box-shadow: none;

    &:not(.btn-link) {
      &:hover,
      &:focus {
        background-color: $ch-deep-green;
        color:#fff;
      }
    }
  }

  &:focus,
  &:active,
  &:active:focus{
      outline: 0;
  }

  //--
  // color variations
  &.btn-raised,
  &.btn-fab,
  .btn-group-raised & {
    @include background-variations(unquote(".btn"), unquote(""), $mdb-btn-background-color);
  }

  //---
  // btn-raised
  &.btn-raised,
  .btn-group-raised & {
    &:not(.btn-link) {
      @include shadow-2dp();

      // colors on hover, focus, active
      &:hover,
      &:focus,
      &.active,
      &:active {

        outline: 0;

        // FIXME: SPEC - this should be the 600 color, how can we get that programmatically if at all? Or are we limited to the color palette only?
        // SASS conversion note: please mirror any content change in _mixins-shared.scss button-variations-content
        @include button-variations(unquote(".btn"), "", $mdb-btn-background-color);
      }


      // shadow on focus
      //   Focus should take precedence over active, so specificity is needed
      &:hover {
        &,
        &.active,
        &:active {
          &,
          &:focus {
            @include big-shadow();
          }
        }
      }
    }
  }

  &.btn-round{
      border-radius: $border-radius-extreme;
  }

  // Align icons inside buttons with text
  i.material-icons {
    vertical-align: middle;
    font-size: $mdb-btn-icon-size-mini;
    top: -1px;
    position: relative;
  }

  &.btn-fab {
    // see above for color variations
    border-radius: 50%;
    font-size: $mdb-btn-fab-font-size;
    height: $mdb-btn-fab-size;
    margin: auto;
    min-width: $mdb-btn-fab-size;
    width: $mdb-btn-fab-size;
    padding: 0;
    overflow: hidden;
    box-shadow: 0 1px 1.5px 0 rgba(0, 0, 0, 0.12), 0 1px 1px 0 rgba(0, 0, 0, 0.24);
    position: relative;
    line-height: normal;

    .ripple-container {
      border-radius: 50%;
    }

    &.btn-fab-mini,
    .btn-group-sm & {
      height: $mdb-btn-fab-size-mini;
      min-width: $mdb-btn-fab-size-mini;
      width: $mdb-btn-fab-size-mini;

      &.material-icons {
        top: ($mdb-btn-icon-size-mini - $mdb-btn-fab-font-size) / 2;
        left: ($mdb-btn-icon-size-mini - $mdb-btn-fab-font-size) / 2;
      }

      .material-icons{
          font-size: $mdb-btn-icon-size-mini;
      }
    }

    i.material-icons {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-($mdb-btn-fab-font-size / 2), -($mdb-btn-fab-font-size / 2));
      line-height: $mdb-btn-fab-font-size;
      width: $mdb-btn-fab-font-size;
      font-size: $mdb-btn-fab-font-size;
    }
  }

  // Size variations
  &.btn-lg,
  .btn-group-lg & {
    font-size: $mdb-btn-font-size-lg;
    padding: 18px 36px;
  }
  &.btn-sm,
  .btn-group-sm & {
    padding: 5px 20px;
    font-size: $mdb-btn-font-size-sm;
  }
  &.btn-xs,
  .btn-group-xs & {
    padding: 4px 15px;
    font-size: $mdb-btn-font-size-xs;
  }
}

.btn-just-icon{
    font-size: 20px;
    padding: 6px 11px;
}
// Disabled buttons and button groups
.btn,
.input-group-btn .btn,
.btn-group,
.btn-group-vertical {
  // have to ratchet up the specificity to kill drop shadows on disabled raised buttons
  fieldset[disabled][disabled] &,
  &.disabled,
  &:disabled,
  &[disabled][disabled] {
    // spec: light theme: Disabled text: 26% #000000
    /*color: rgba(#000000, (26/100));*/
    .theme-dark & {
      // spec: dark theme: Disabled text: 30% #FFFFFF
      /*color: rgba(#FFFFFF, (30/100));*/
    }

    // flat buttons lose transparency
   /* background: transparent;*/

    // no box-shadow on raised - need specificity
    &.btn-raised,
    &.btn-group-raised {
      &,
      &.active,
      &:active,
      &:focus:not(:active) {
        box-shadow: none;
      }
    }
  }
}

// btn-group variations
.btn-group,
.btn-group-vertical {

  position: relative;
  //border-radius: 2px;
  margin: 10px 1px;

  &.open {
    .dropdown-toggle {
      //box-shadow: none;
    }

    & > .dropdown-toggle.btn {
      @include variations(unquote(".btn"), unquote(""), background-color, $mdb-btn-background-color);
    }
  }

  .dropdown-menu {
    border-radius: 0 0 $border-radius-base $border-radius-base;
  }

  &.btn-group-raised {
    @include shadow-2dp();
  }

  & .btn + .btn,
  .btn,
  .btn:active,
  .btn-group {
    margin: 0;
  }
}

.close{
    font-size: inherit;
    color: $white-color;
    opacity: .9;
    text-shadow: none;

    &:hover,
    &:focus{
        opacity: 1;
        color: $white-color;
    }

    i{
        font-size: 20px;
    }
}
.btn-loading{
  animation: rotate .6s infinite linear;
  border: 2px solid #fff;
  border-right-color: transparent;
  border-radius: 50%;
  display: inline-block;
  float: none;
  margin-right: .5rem;
  width: 14px;
  height: 14px;
}

@keyframes rotate {
  0%    { transform: rotate(0deg); }
  100%  { transform: rotate(360deg); }
}

